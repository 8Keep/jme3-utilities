// Copyright (c) 2014, Stephen Gold
// All rights reserved.

// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//    * Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//    * Stephen Gold's name may not be used to endorse or promote products
//      derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL STEPHEN GOLD BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// A material for use with the SkyMaterial class: this version includes six
// objects and zero cloud layers.

MaterialDef dome60 {
    MaterialParameters {
        Color ClearColor
        Vector2 TopCoord

        Texture2D StarsColorMap

        Boolean Object0Glow
        Color Object0Color
	Texture2D Object0ColorMap
	Vector2 Object0Center
	Vector2 Object0TransformU
	Vector2 Object0TransformV

        Boolean Object1Glow
        Color Object1Color
	Texture2D Object1ColorMap
	Vector2 Object1Center
	Vector2 Object1TransformU
	Vector2 Object1TransformV

        Boolean Object2Glow
        Color Object2Color
	Texture2D Object2ColorMap
	Vector2 Object2Center
	Vector2 Object2TransformU
	Vector2 Object2TransformV

        Boolean Object3Glow
        Color Object3Color
	Texture2D Object3ColorMap
	Vector2 Object3Center
	Vector2 Object3TransformU
	Vector2 Object3TransformV

        Boolean Object4Glow
        Color Object4Color
	Texture2D Object4ColorMap
	Vector2 Object4Center
	Vector2 Object4TransformU
	Vector2 Object4TransformV

        Boolean Object5Glow
        Color Object5Color
	Texture2D Object5ColorMap
	Vector2 Object5Center
	Vector2 Object5TransformU
	Vector2 Object5TransformV

	Color HazeColor
	Texture2D HazeAlphaMap
    }

    Technique {
        Defines {
	    HAS_STARS : StarsColorMap
	    HAS_OBJECT0 : Object0ColorMap
	    HAS_OBJECT1 : Object1ColorMap
	    HAS_OBJECT2 : Object2ColorMap
	    HAS_OBJECT3 : Object3ColorMap
	    HAS_OBJECT4 : Object4ColorMap
	    HAS_OBJECT5 : Object5ColorMap
	    HAS_HAZE : HazeAlphaMap
        }
        FragmentShader GLSL110: Shaders/skies/dome60/dome60.frag
        VertexShader   GLSL110: Shaders/skies/dome60/dome60.vert
        WorldParameters {
            WorldViewProjectionMatrix
        }
    }

    Technique Glow {
        Defines {
	    HAS_OBJECT0 : Object0Glow
	    HAS_OBJECT1 : Object1Glow
	    HAS_OBJECT2 : Object2Glow
	    HAS_OBJECT3 : Object3Glow
	    HAS_OBJECT4 : Object4Glow
	    HAS_OBJECT5 : Object5Glow
        }
        FragmentShader GLSL110: Shaders/skies/dome60/dome60.frag
        VertexShader   GLSL110: Shaders/skies/dome60/dome60.vert
        WorldParameters {
            WorldViewProjectionMatrix
        }
    }
}